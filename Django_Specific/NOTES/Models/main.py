# Query Set => Defined as alist containing all those objects we have created using the Django model
# Query Set allow you to read the data from the database , filter it and order it.

# Model - Each Model Map to single database table.
# Model is subclass of django.db.models.Model


# Creating Our Own Model Class
# -IN model.py
class ClassName(models.Model):
    field_name = models.FieldType(arg, options)

# field_name = models.IntegerField()
# field_name = models.CharField(max_length=70)
# field_name = models.EmailField(max_length=79)

# If we don't assing primary key a  primary key created automatically

# After writing Models
# python manage.py makemigrations - Converts models class into sql statements
#################################################

# python manage.py migrate - Execute sql statements generated by makemigrations.This command will execute all application's
#################################################


# sqlmigrate - We can retrive Sql statement by using below command:-
"""
Syntax :- 
 python manage.py sqlmigrate application_name dbfile_name

 python manage.py sqlmigrate enroll 0001

 enroll/migrations/0001_initial.py
"""
# showmigrations -
#################################################
# Field Options
# null - It can contain either true or false. If true Django will store empty vaues as NULL in the database Default is False.

# Blonk - It can contain either true or false. . If true , the field is allowed to be blank. Thsi is diffrent than null, null is purely database related whereas blank is validations related . If field has blank = True , form validation will allow entry of an empty value . If a field has blank = False, the field will required Default is False.

# default - The default value for the field
# verbose_name
# primary_key - If true , this field is the primary key  for the model. ex :- primary_key = True
# unique

# Field Types
# IntegerField - Range is -21478368 to 2147473647
# BigIntegerField
# AutoField - An IntegerField that automatically increments according to aviailable IDs. You usully won't nee dto use this directly ex - stuid = models.AutoField()
# FloatField
# CharField - small to large-sized strings
# TextField - large text field
# BooleanField
# EmailField
# URLField
# BinaryField - profile_pic = models.BinaryField()


#################################
# Models OPerations
# CreateModel(name,fields,options=None,bases=None,managers=None)

# DeleteModel(name)
# RenameModel(old,new_name)
# AlterModel(name,table)
# AlterUniqueTogether(name,index_together)
# AlterOrderWithRespectTo(name,order_with_respect_to)
# AlterModelOptions(name,options)
# AlterModelMangers(name,mangers)
# AddField(model_name,field,presave_default= True)
# ALterField
# RenameField
# AddConstraint(model_name,contraint)
# RemoveConstraint(model_name,name)
